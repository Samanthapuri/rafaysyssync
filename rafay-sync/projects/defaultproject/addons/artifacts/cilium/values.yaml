# for kube version <1.19
ingress-nginx-v0:
  fullnameOverride: ingress-controller-v0
  controller:
    kind: DaemonSet
    image:
      registry: registry.rafay-edge.net
      image: rafay/ingress-nginx-controller
      tag: "v0.49.3"
      digest: ""
    service:
      type: ClusterIP
      enableHttp: false
    podAnnotations:
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
    resources:
      requests:
        cpu: 100m
        memory: 90Mi
      limits:
        cpu: 500m
        memory: 512Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
    hostPort:
      enabled: true
    extraArgs:
      enable-ssl-passthrough: ""
    config:
        proxy-body-size: "0"
        proxy-request-buffering: "off"
        server-snippet: |
          set $workload_name unknown;
          set $workloadId   unknown;
          set $orgId unknown;
          set $partnerId unknown;
        log-format-upstream: '{"workload_name": "$workload_name",
          "workload_id": "$workloadId",
          "org_id": "$orgId",
          "partner_id": "$partnerId",
          "client_ip": "$proxy_protocol_addr",
          "status": $status,
          "user_agent": "$http_user_agent",
          "host": "$host",
          "path": "$uri",
          "request_time": $request_time,
          "bytes_svc_to_client":$body_bytes_sent,
          "request_id": "$req_id"}'
    admissionWebhooks:
      port: 22250
      patch:
        image:
          registry: registry.rafay-edge.net
          image: rafay/kube-webhook-certgen
          tag: v1.5.1
        nodeSelector:
          kubernetes.io/arch: amd64

# for kube version >=1.19
ingress-nginx-v1:
  fullnameOverride: ingress-controller-v1
  controller:
    kind: DaemonSet
    image:
      registry: registry.rafay-edge.net
      image: rafay/ingress-nginx-controller
      tag: "v1.1.1"
      digest: ""
    service:
      type: ClusterIP
      enableHttp: false
    podAnnotations:
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
    resources:
      requests:
        cpu: 100m
        memory: 90Mi
      limits:
        cpu: 500m
        memory: 512Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
    hostPort:
      enabled: true
    extraArgs:
      enable-ssl-passthrough: ""
    config:
        proxy-body-size: "0"
        proxy-request-buffering: "off"
        server-snippet: |
          set $workload_name unknown;
          set $workloadId   unknown;
          set $orgId unknown;
          set $partnerId unknown;
        log-format-upstream: '{"workload_name": "$workload_name",
          "workload_id": "$workloadId",
          "org_id": "$orgId",
          "partner_id": "$partnerId",
          "client_ip": "$proxy_protocol_addr",
          "status": $status,
          "user_agent": "$http_user_agent",
          "host": "$host",
          "path": "$uri",
          "request_time": $request_time,
          "bytes_svc_to_client":$body_bytes_sent,
          "request_id": "$req_id"}'
    admissionWebhooks:
      port: 22250
      patch:
        image:
          registry: registry.rafay-edge.net
          image: rafay/kube-webhook-certgen
          tag: v1.1.1
          digest: ""
        nodeSelector:
          kubernetes.io/arch: amd64
    ingressClassResource:
      default: true
    watchIngressWithoutClass: true
